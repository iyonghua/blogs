<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>weiyonghua&#39;s blogs</title>
  
  
  <link href="/blogs/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-30T09:37:51.211Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>weiyonghua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>国内加速访问Github的办法，超级简单</title>
    <link href="http://yoursite.com/2019/12/30/%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AEGithub%E7%9A%84%E5%8A%9E%E6%B3%95%EF%BC%8C%E8%B6%85%E7%BA%A7%E7%AE%80%E5%8D%95/"/>
    <id>http://yoursite.com/2019/12/30/%E5%9B%BD%E5%86%85%E5%8A%A0%E9%80%9F%E8%AE%BF%E9%97%AEGithub%E7%9A%84%E5%8A%9E%E6%B3%95%EF%BC%8C%E8%B6%85%E7%BA%A7%E7%AE%80%E5%8D%95/</id>
    <published>2019-12-30T09:35:00.000Z</published>
    <updated>2019-12-30T09:37:51.211Z</updated>
    
    <content type="html"><![CDATA[<h1 id="国内加速访问Github的办法，超级简单"><a href="#国内加速访问Github的办法，超级简单" class="headerlink" title="国内加速访问Github的办法，超级简单"></a>国内加速访问Github的办法，超级简单</h1><p><a href="//www.zhihu.com/people/kuo-zhan-mi-extfans" target="_blank" rel="noopener"><img src="https://pic2.zhimg.com/v2-013471d1e9c3de2c1f4a3b4ba1be5ba1_xs.jpg" alt="扩展迷Extfans"></a></p><p><a href="//www.zhihu.com/people/kuo-zhan-mi-extfans" target="_blank" rel="noopener">扩展迷Extfans</a></p><p>发现有趣的网站，玩转Chrome扩展，尽在扩展迷Extfans</p><p>37 人赞同了该文章</p><p>自从GitHub私有库免费后，又涌入了一大批开发爱好者。</p><p>但国内访问GitHub的速度实在是慢得一匹，在clone仓库时甚至只有10k以下的速度，大大影响了程序员的交友效率。<br><img src="https://pic4.zhimg.com/v2-dec4f419d4d8ba5ba1ed260eaebab4cb_b.jpg" alt="">)<img src="https://pic4.zhimg.com/80/v2-dec4f419d4d8ba5ba1ed260eaebab4cb_hd.jpg" alt=""><br>GitHub在国内访问速度慢的问题原因有很多，但最直接和最主要的原因是GitHub的分发加速网络的域名遭到dns污染。</p><p>今天我们就介绍通过修改系统hosts文件的办法，绕过国内dns解析，直接访问GitHub的CDN节点，从而达到加速的目的。</p><p>不需要科（）学（）上网，也不需要开代理加速器。</p><p>一、打开<a href="https://link.zhihu.com/?target=http%3A//IPAddress.com">http://IPAddress.com</a>网站，查询下面3个网址对应的IP地址</p><ol><li><p><a href="https://link.zhihu.com/?target=http%3A//github.com">http://github.com</a></p></li><li><p><a href="https://link.zhihu.com/?target=http%3A//assets-cdn.github.com">http://assets-cdn.github.com</a></p></li><li><p><a href="https://link.zhihu.com/?target=http%3A//github.global.ssl.fastly.net">http://github.global.ssl.fastly.net</a><br><img src="https://pic4.zhimg.com/v2-002f06094e4bab7ef86fe0d6eb086883_b.jpg" alt="">)<img src="https://pic4.zhimg.com/80/v2-002f06094e4bab7ef86fe0d6eb086883_hd.jpg" alt=""><br>二、修改本地电脑系统hosts文件</p></li></ol><p>路径 C:\Windows\System32\drivers\etc</p><p>直接在最后加入以下代码（此时可能需要管理员权限,可以将hosts复制到桌面，修改好了再复制回去覆盖原先的）：</p><p>192.30.253.112 <a href="https://link.zhihu.com/?target=http%3A//github.com">http://github.com</a></p><p>151.101.184.133 <a href="https://link.zhihu.com/?target=http%3A//assets-cdn.github.com">http://assets-cdn.github.com</a></p><p>151.101.185.194 <a href="https://link.zhihu.com/?target=http%3A//github.global.ssl.fastly.net">http://github.global.ssl.fastly.net</a><br><img src="https://pic1.zhimg.com/v2-a99ec919d7147d655465e68fc5e44054_b.jpg" alt=""><br><img src="https://pic1.zhimg.com/80/v2-a99ec919d7147d655465e68fc5e44054_hd.jpg" alt=""><br>三、刷新系统dns缓存</p><p>用WIN+R快捷键打开运行窗口，输入命令：cmd并回车进入命令行窗口。</p><p>接着输入命令：ipconfig /flushdns回车后执行刷新本地dns缓存数据即可。<br><img src="https://pic4.zhimg.com/v2-bbf2bd87a4ecc7a6f8b11a664a18e45b_b.jpg" alt=""><br><img src="https://pic4.zhimg.com/80/v2-bbf2bd87a4ecc7a6f8b11a664a18e45b_hd.jpg" alt=""><br>内网限速的情况下效果如图所示，根据网上的普遍反馈来看，达到10m/s不是问题。<br><img src="https://pic3.zhimg.com/v2-8c4537a8eb0a3afdf31d8893dee90d7a_b.jpg" alt="">)<img src="https://pic3.zhimg.com/80/v2-8c4537a8eb0a3afdf31d8893dee90d7a_hd.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;国内加速访问Github的办法，超级简单&quot;&gt;&lt;a href=&quot;#国内加速访问Github的办法，超级简单&quot; class=&quot;headerlink&quot; title=&quot;国内加速访问Github的办法，超级简单&quot;&gt;&lt;/a&gt;国内加速访问Github的办法，超级简单&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/12/24/hello-world/"/>
    <id>http://yoursite.com/2019/12/24/hello-world/</id>
    <published>2019-12-24T09:47:59.000Z</published>
    <updated>2019-12-30T09:33:36.213Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="hello" scheme="http://yoursite.com/tags/hello/"/>
    
  </entry>
  
  <entry>
    <title>调整tomcat vm内存大小</title>
    <link href="http://yoursite.com/2017/03/13/ed/%E8%B0%83%E6%95%B4tomcat-vm%E5%86%85%E5%AD%98%E5%A4%A7%E5%B0%8F-2/"/>
    <id>http://yoursite.com/2017/03/13/ed/%E8%B0%83%E6%95%B4tomcat-vm%E5%86%85%E5%AD%98%E5%A4%A7%E5%B0%8F-2/</id>
    <published>2017-03-13T06:17:00.000Z</published>
    <updated>2019-12-30T07:59:54.956Z</updated>
    
    <content type="html"><![CDATA[<p><strong>在tomcat vm启动参数中调整虚拟机内存大小：</strong></p><blockquote><p>-server -XX:PermSize=64M -XX:MaxPermSize=512m -Xms512m -Xmx1024m</p></blockquote><p><img src="http://img.blog.csdn.net/20170421134047832?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VpeW9uZ2h1YTE2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20170421134119849?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VpeW9uZ2h1YTE2/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;在tomcat vm启动参数中调整虚拟机内存大小：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-server -XX:PermSize=64M -XX:MaxPermSize=512m -Xms512m -Xmx1024m&lt;/p&gt;
&lt;/blo
      
    
    </summary>
    
    
      <category term="开发工具" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="tomcat" scheme="http://yoursite.com/tags/tomcat/"/>
    
      <category term="vm" scheme="http://yoursite.com/tags/vm/"/>
    
  </entry>
  
  <entry>
    <title>jvm系列(八):jvm知识点总览-高级Java工程师面试必备</title>
    <link href="http://yoursite.com/2017/03/10/jvm%E7%B3%BB%E5%88%97-%E5%85%AB-jvm%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E8%A7%88-%E9%AB%98%E7%BA%A7Java%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/"/>
    <id>http://yoursite.com/2017/03/10/jvm%E7%B3%BB%E5%88%97-%E5%85%AB-jvm%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E8%A7%88-%E9%AB%98%E7%BA%A7Java%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/</id>
    <published>2017-03-10T00:26:19.000Z</published>
    <updated>2017-03-10T00:54:27.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jvm系列-八-jvm知识点总览-高级Java工程师面试必备"><a href="#jvm系列-八-jvm知识点总览-高级Java工程师面试必备" class="headerlink" title="jvm系列(八):jvm知识点总览-高级Java工程师面试必备"></a>jvm系列(八):jvm知识点总览-高级Java工程师面试必备</h1><p>在江湖中要练就绝世武功必须内外兼备，精妙的招式和深厚的内功，武功的基础是内功。对于武功低（就像江南七怪）的人，招式更重要，因为他们不能靠内功直接去伤人，只能靠招式，利刃上优势来取胜了，但是练到高手之后，内功就更主要了。一个内功低的人招式在奇妙也打不过一个内功高的人。比如，你剑法再厉害，一剑刺过来，别人一掌打断你的剑，你还怎么使剑法，你一掌打到一个武功高的人身上，那人没什么事，却把你震伤了，你还怎么打。同样两者也是相辅相成的，内功深厚之后，原来普通的一招一式威力也会倍增。</p><p>对于搞开发的我们其实也是一样，现在流行的框架越来越多，封装的也越来越完善，各种框架可以搞定一切，几乎不用关注底层的实现，初级程序员只要熟悉基本的使用方法，便可以快速的开发上线；但对于高级程序员来讲，内功的修炼却越发的重要，比如算法、设计模式、底层原理等，只有把这些基础熟练之后，才能在开发过程中知其然知其所以然，出现问题时能快速定位到问题的本质。</p><p>对于Java程序员来讲，spring全家桶几乎可以搞定一切，spring全家桶便是精妙的招式，jvm就是内功心法很重要的一块，线上出现性能问题，jvm调优更是不可回避的问题。因此JVM基础知识对于高级程序员的重要性不必言语，我司在面试高级开发的时候，jvm相关知识也必定是考核的标准之一。本篇文章会根据之前写的jvm系列文章梳理出jvm需要关注的所有考察点。</p><h2 id="jvm-总体梳理"><a href="#jvm-总体梳理" class="headerlink" title="jvm 总体梳理"></a>jvm 总体梳理</h2><p>jvm体系总体分四大块：</p><ul><li>类的加载机制</li><li>jvm内存结构</li><li>GC算法 垃圾回收</li><li>GC分析 命令调优</li></ul><p><em>当然这些知识点在之前的文章中都有详细的介绍，这里只做主干的梳理</em></p><p>这里画了一个思维导图，将所有的知识点进行了陈列，因为图比较大可以点击右键下载了放大查看。</p><p><img src="http://www.ityouknow.com/assets/images/2017/jvm/JVM.jpg" alt=""></p><h2 id="类的加载机制"><a href="#类的加载机制" class="headerlink" title="类的加载机制"></a>类的加载机制</h2><p>主要关注点：</p><ul><li>什么是类的加载</li><li>类的生命周期</li><li>类加载器</li><li>双亲委派模型</li></ul><p><strong>什么是类的加载</strong></p><p>类的加载指的是将类的.class文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，然后在堆区创建一个java.lang.Class对象，用来封装类在方法区内的数据结构。类的加载的最终产品是位于堆区中的Class对象，Class对象封装了类在方法区内的数据结构，并且向Java程序员提供了访问方法区内的数据结构的接口。</p><p><strong>类的生命周期</strong></p><p>类的生命周期包括这几个部分，加载、连接、初始化、使用和卸载，其中前三部是类的加载的过程,如下图；</p><p><img src="http://www.ityouknow.com/assets/images/2017/jvm/class.png" alt=""></p><ul><li>加载，查找并加载类的二进制数据，在Java堆中也创建一个java.lang.Class类的对象</li><li>连接，连接又包含三块内容：验证、准备、初始化。1）验证，文件格式、元数据、字节码、符号引用验证；2）准备，为类的静态变量分配内存，并将其初始化为默认值；3）解析，把类中的符号引用转换为直接引用</li><li>初始化，为类的静态变量赋予正确的初始值</li><li>使用，new出对象程序中使用</li><li>卸载，执行垃圾回收</li></ul><blockquote><p><em>几个小问题？</em><br><em>1、JVM初始化步骤 ？ 2、类初始化时机 ？3、哪几种情况下，Java虚拟机将结束生命周期？</em><br><em>答案参考这篇文章<a href="http://www.cnblogs.com/ityouknow/p/5603287.html" target="_blank" rel="noopener">jvm系列(一):java类的加载机制</a></em></p></blockquote><p><strong>类加载器</strong></p><p><img src="http://www.ityouknow.com/assets/images/2017/jvm/calssloader.png" alt=""></p><ul><li>启动类加载器：Bootstrap ClassLoader，负责加载存放在JDK\jre\lib(JDK代表JDK的安装目录，下同)下，或被-Xbootclasspath参数指定的路径中的，并且能被虚拟机识别的类库</li><li>扩展类加载器：Extension ClassLoader，该加载器由sun.misc.Launcher$ExtClassLoader实现，它负责加载DK\jre\lib\ext目录中，或者由java.ext.dirs系统变量指定的路径中的所有类库（如javax.*开头的类），开发者可以直接使用扩展类加载器。</li><li>应用程序类加载器：Application ClassLoader，该类加载器由sun.misc.Launcher$AppClassLoader来实现，它负责加载用户类路径（ClassPath）所指定的类，开发者可以直接使用该类加载器</li></ul><p><strong>类加载机制</strong></p><ul><li>全盘负责，当一个类加载器负责加载某个Class时，该Class所依赖的和引用的其他Class也将由该类加载器负责载入，除非显示使用另外一个类加载器来载入</li><li>父类委托，先让父类加载器试图加载该类，只有在父类加载器无法加载该类时才尝试从自己的类路径中加载该类</li><li>缓存机制，缓存机制将会保证所有加载过的Class都会被缓存，当程序中需要使用某个Class时，类加载器先从缓存区寻找该Class，只有缓存区不存在，系统才会读取该类对应的二进制数据，并将其转换成Class对象，存入缓存区。这就是为什么修改了Class后，必须重启JVM，程序的修改才会生效</li></ul><h2 id="jvm内存结构"><a href="#jvm内存结构" class="headerlink" title="jvm内存结构"></a>jvm内存结构</h2><p>主要关注点：</p><ul><li>jvm内存结构都是什么</li><li>对象分配规则</li></ul><p><strong>jvm内存结构</strong></p><p><img src="http://www.ityouknow.com/assets/images/2017/jvm/structure.png" alt=""></p><blockquote><p>方法区和对是所有线程共享的内存区域；而java栈、本地方法栈和程序员计数器是运行是线程私有的内存区域。*   Java堆（Heap）,是Java虚拟机所管理的内存中最大的一块。Java堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。此内存区域的唯一目的就是存放对象实例，几乎所有的对象实例都在这里分配内存。</p></blockquote><ul><li>方法区（Method Area）,方法区（Method Area）与Java堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。</li><li>程序计数器（Program Counter Register）,程序计数器（Program Counter Register）是一块较小的内存空间，它的作用可以看做是当前线程所执行的字节码的行号指示器。</li><li>JVM栈（JVM Stacks）,与程序计数器一样，Java虚拟机栈（Java Virtual Machine Stacks）也是线程私有的，它的生命周期与线程相同。虚拟机栈描述的是Java方法执行的内存模型：每个方法被执行的时候都会同时创建一个栈帧（Stack Frame）用于存储局部变量表、操作栈、动态链接、方法出口等信息。每一个方法被调用直至执行完成的过程，就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。</li><li>本地方法栈（Native Method Stacks）,本地方法栈（Native Method Stacks）与虚拟机栈所发挥的作用是非常相似的，其区别不过是虚拟机栈为虚拟机执行Java方法（也就是字节码）服务，而本地方法栈则是为虚拟机使用到的Native方法服务。</li></ul><p><strong>对象分配规则</strong></p><ul><li>对象优先分配在Eden区，如果Eden区没有足够的空间时，虚拟机执行一次Minor GC。</li><li>大对象直接进入老年代（大对象是指需要大量连续内存空间的对象）。这样做的目的是避免在Eden区和两个Survivor区之间发生大量的内存拷贝（新生代采用复制算法收集内存）。</li><li>长期存活的对象进入老年代。虚拟机为每个对象定义了一个年龄计数器，如果对象经过了1次Minor GC那么对象会进入Survivor区，之后每经过一次Minor GC那么对象的年龄加1，知道达到阀值对象进入老年区。</li><li>动态判断对象的年龄。如果Survivor区中相同年龄的所有对象大小的总和大于Survivor空间的一半，年龄大于或等于该年龄的对象可以直接进入老年代。</li><li>空间分配担保。每次进行Minor GC时，JVM会计算Survivor区移至老年区的对象的平均大小，如果这个值大于老年区的剩余值大小则进行一次Full GC，如果小于检查HandlePromotionFailure设置，如果true则只进行Monitor GC,如果false则进行Full GC。</li></ul><blockquote><p><em>如何通过参数来控制个各个内存区域</em><br><em>参考此文章：<a href="http://www.cnblogs.com/ityouknow/p/5610232.html" target="_blank" rel="noopener">jvm系列(二):JVM内存结构</a></em></p></blockquote><h2 id="GC算法-垃圾回收"><a href="#GC算法-垃圾回收" class="headerlink" title="GC算法 垃圾回收"></a>GC算法 垃圾回收</h2><p>主要关注点：</p><ul><li>对象存活判断</li><li>GC算法</li><li>垃圾回收器</li></ul><p><strong>对象存活判断</strong></p><p>判断对象是否存活一般有两种方式：</p><ul><li>引用计数：每个对象有一个引用计数属性，新增一个引用时计数加1，引用释放时计数减1，计数为0时可以回收。此方法简单，无法解决对象相互循环引用的问题。</li><li>可达性分析（Reachability Analysis）：从GC Roots开始向下搜索，搜索所走过的路径称为引用链。当一个对象到GC Roots没有任何引用链相连时，则证明此对象是不可用的，不可达对象。</li></ul><p><strong>GC算法</strong></p><p>GC最基础的算法有三种：标记 -清除算法、复制算法、标记-压缩算法，我们常用的垃圾回收器一般都采用分代收集算法。</p><ul><li>标记 -清除算法，“标记-清除”（Mark-Sweep）算法，如它的名字一样，算法分为“标记”和“清除”两个阶段：首先标记出所有需要回收的对象，在标记完成后统一回收掉所有被标记的对象。</li><li>复制算法，“复制”（Copying）的收集算法，它将可用内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块的内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。</li><li>标记-压缩算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存</li><li>分代收集算法，“分代收集”（Generational Collection）算法，把Java堆分为新生代和老年代，这样就可以根据各个年代的特点采用最适当的收集算法。</li></ul><p><strong>垃圾回收器</strong></p><ul><li>Serial收集器，串行收集器是最古老，最稳定以及效率高的收集器，可能会产生较长的停顿，只使用一个线程去回收。</li><li>ParNew收集器，ParNew收集器其实就是Serial收集器的多线程版本。</li><li>Parallel收集器，Parallel Scavenge收集器类似ParNew收集器，Parallel收集器更关注系统的吞吐量。</li><li>Parallel Old 收集器，Parallel Old是Parallel Scavenge收集器的老年代版本，使用多线程和“标记－整理”算法</li><li>CMS收集器，CMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。</li><li>G1收集器，G1 (Garbage-First)是一款面向服务器的垃圾收集器,主要针对配备多颗处理器及大容量内存的机器. 以极高概率满足GC停顿时间要求的同时,还具备高吞吐量性能特征</li></ul><blockquote><p><em>GC算法和垃圾回收器算法图解以及更详细内容参考 <a href="http://www.cnblogs.com/ityouknow/p/5614961.html" target="_blank" rel="noopener">jvm系列(三):GC算法 垃圾收集器</a></em></p></blockquote><h2 id="GC分析-命令调优"><a href="#GC分析-命令调优" class="headerlink" title="GC分析 命令调优"></a>GC分析 命令调优</h2><p>主要关注点：</p><ul><li>GC日志分析</li><li>调优命令</li><li>调优工具</li></ul><p><strong>GC日志分析</strong></p><p>摘录GC日志一部分（前部分为年轻代gc回收；后部分为full gc回收）：</p><p>通过上面日志分析得出，PSYoungGen、ParOldGen、PSPermGen属于Parallel收集器。其中PSYoungGen表示gc回收前后年轻代的内存变化；ParOldGen表示gc回收前后老年代的内存变化；PSPermGen表示gc回收前后永久区的内存变化。young gc 主要是针对年轻代进行内存回收比较频繁，耗时短；full gc 会对整个堆内存进行回城，耗时长，因此一般尽量减少full gc的次数</p><p>young gc 日志:</p><p><img src="http://www.ityouknow.com/assets/images/2017/jvm/yong.jpg" alt=""></p><p>Full GC日志:</p><p><img src="http://www.ityouknow.com/assets/images/2017/jvm/full.jpg" alt=""></p><p><strong>调优命令</strong></p><p>Sun JDK监控和故障处理命令有jps jstat jmap jhat jstack jinfo</p><ul><li>jps，JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程。</li><li>jstat，JVM statistics Monitoring是用于监视虚拟机运行时状态信息的命令，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据。</li><li>jmap，JVM Memory Map命令用于生成heap dump文件</li><li>jhat，JVM Heap Analysis Tool命令是与jmap搭配使用，用来分析jmap生成的dump，jhat内置了一个微型的HTTP/HTML服务器，生成dump的分析结果后，可以在浏览器中查看</li><li>jstack，用于生成java虚拟机当前时刻的线程快照。</li><li>jinfo，JVM Configuration info 这个命令作用是实时查看和调整虚拟机运行参数。</li></ul><blockquote><p><em>详细的命令使用参考这里<a href="http://www.ityouknow.com/java/2016/01/01/jvm%E8%B0%83%E4%BC%98-%E5%91%BD%E4%BB%A4%E7%AF%87.html" target="_blank" rel="noopener">jvm系列(四):jvm调优-命令篇</a></em></p></blockquote><p><strong>调优工具</strong></p><p>常用调优工具分为两类,jdk自带监控工具：jconsole和jvisualvm，第三方有：MAT(Memory Analyzer Tool)、GChisto。</p><ul><li>jconsole，Java Monitoring and Management Console是从java5开始，在JDK中自带的java监控和管理控制台，用于对JVM中内存，线程和类等的监控</li><li>jvisualvm，jdk自带全能工具，可以分析内存快照、线程快照；监控内存变化、GC变化等。</li><li>MAT，Memory Analyzer Tool，一个基于Eclipse的内存分析工具，是一个快速、功能丰富的Java heap分析工具，它可以帮助我们查找内存泄漏和减少内存消耗</li><li>GChisto，一款专业分析gc日志的工具</li></ul><blockquote><p><em>工具使用参考 <a href="http://www.ityouknow.com/java/2017/02/22/jvm-tool.html" target="_blank" rel="noopener">jvm系列(七):jvm调优-工具篇</a></em></p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jvm系列-八-jvm知识点总览-高级Java工程师面试必备&quot;&gt;&lt;a href=&quot;#jvm系列-八-jvm知识点总览-高级Java工程师面试必备&quot; class=&quot;headerlink&quot; title=&quot;jvm系列(八):jvm知识点总览-高级Java工程师面试必备&quot;
      
    
    </summary>
    
    
      <category term="术业专攻" scheme="http://yoursite.com/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="jvm" scheme="http://yoursite.com/tags/jvm/"/>
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo deploy发布失败解决办法</title>
    <link href="http://yoursite.com/2017/03/03/hexo-deploy%E5%8F%91%E5%B8%83%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2017/03/03/hexo-deploy%E5%8F%91%E5%B8%83%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2017-03-03T03:16:00.000Z</published>
    <updated>2017-05-12T03:46:25.081Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题描述：</strong><br>==ssh秘钥已添加，但没有权限提交==</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Error: Host key verification failed.</span><br><span class="line">fatal: Could not read from remote repository.</span><br><span class="line"></span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br><span class="line"></span><br><span class="line">    at ChildProcess.&lt;anonymous&gt; (D:\WORKSPACES\itblog\node_modules\hexo-util\lib\spawn.js:37:17)</span><br><span class="line">    at emitTwo (events.js:106:13)</span><br><span class="line">    at ChildProcess.emit (events.js:191:7)</span><br><span class="line">    at ChildProcess.cp.emit (D:\WORKSPACES\itblog\node_modules\cross-spawn\lib\enoent.js:40:29)</span><br><span class="line">    at maybeClose (internal&#x2F;child_process.js:877:16)</span><br><span class="line">    at Process.ChildProcess._handle.onexit (internal&#x2F;child_process.js:226:5)</span><br><span class="line">FATAL Host key verification failed.</span><br><span class="line">fatal: Could not read from remote repository.</span><br></pre></td></tr></table></figure><p><strong>解决办法：</strong><br>新增个人公钥（部署公钥）</p><p>1.如何生成ssh公钥<br>你可以按如下命令来生成sshkey:     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxxxx@xxxxx.com&quot;  </span><br><span class="line"></span><br><span class="line"># Generating public&#x2F;private rsa key pair...</span><br><span class="line"># 三次回车即可生成 ssh key</span><br></pre></td></tr></table></figure><p>查看你的public key，并把他添加到 Git @ OSC SSH key添加地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br><span class="line"># ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6eNtGpNGwstc....</span><br></pre></td></tr></table></figure><p>添加后，在终端（Terminal）中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.oschina.net</span><br></pre></td></tr></table></figure><p>若返回</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Welcome to Git@OSC, yourname!</span><br></pre></td></tr></table></figure><p>则证明添加成功。        </p><p>2.怎么添加用户ssh key?</p><ol><li>点击右上角的输入图片说明标志,进入个人中心,然后点击左侧的ssh公钥后在下图位置填写你的ssh公钥</li><li>点击确定,然后验证密码(即你的注册账号密码)就完成了ssh公钥添加<br><img src="https://static.oschina.net/uploads/img/201610/18115822_miTO.png" alt="这里写图片描述"></li></ol><p>3.项目的ssh key和用户的ssh key两处地方有什么不同?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">项目的sshkey只针对项目,且我们仅对项目提供了部署公钥,即项目下的公钥仅能拉取项目,这通常用于生产服务器拉取仓库的代码。</span><br><span class="line">而用户的key则是针对用户的,用户添加了key就对用户名下的项目和用户参加了的项目具有权限,一般而言,用户的key具有推送和拉取的权限,而项目的key则只具有拉取权限</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;问题描述：&lt;/strong&gt;&lt;br&gt;==ssh秘钥已添加，但没有权限提交==&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;
      
    
    </summary>
    
    
      <category term="FAQ" scheme="http://yoursite.com/categories/FAQ/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="deploy" scheme="http://yoursite.com/tags/deploy/"/>
    
  </entry>
  
</feed>
